{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","result":{"data":{"deck":{"id":"c53c4e25-09fe-5dc7-9799-7a727f2fa24e","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = customTheme(dracula);\nvar _frontmatter = {};\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"Shriek!\"), Object.values(imgs).map(function (img) {\n    mdx(\"link\", {\n      rel: \"preload\",\n      as: \"image\",\n      href: img\n    });\n  })), mdx(Image, {\n    src: imgs.bg,\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingRight: '1rem',\n      color: 'black',\n      backgroundColor: 'black'\n    },\n    mdxType: \"Image\"\n  }, mdx(\"h1\", null, \"Shriek\")), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, mdx(\"p\", null, \"Med programmering i verkt\\xF8y beltet kan du gj\\xF8re det utroligste. P\\xE5 sitt beste kan det revolusjonere verden, p\\xE5 sitt verste \\xF8delegge for generasjoner. ...eller du kan lage ditt eget spill som styres av deg og din venns evne til \\xE5 rope h\\xF8yt og ukontrollert. I dette kurset ser vi p\\xE5 hvordan vi kan bruke innebygde API-er i nettleseren, litt matematikk og en dose kreativitet til \\xE5 lage v\\xE5r egen utgave av Supermarked Shriek.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"User Media\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MediaDevices-API brukes for tilgang til diverse media\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"getUserMedia\"), \" for tilgang til kamera eller mikrofon\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Krever \\\"Secure Context\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Styrer permissions\")), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"I nettleser-API som omhandler \\\"Media Devices\\\" kan du be om tilgang til kamera eller mikrofon via `getUserMedia`.\", mdx(\"p\", null, \"Dette m\\xE5 lastes i en \\\"secure context\\\", som betyr at det m\\xE5 vanligvis skje via HTTPS. Dette er grunnet personvern, og nettleser vil pr\\xF8ve \\xE5 sikre at ingen blir spionert p\\xE5 via usikre tilkoblinger. Unntaket fra denne regelen er hvis nettsiden er hostet lokalt, slik som via localhost. Da blir det sett p\\xE5 som en \\\"secure context\\\"\"), mdx(\"p\", null, \"Denne tilgangen til en gitt ressurs, slik som kamera eller mikrofon, h\\xE5ndteres via permissions i nettleser. Som betyr at brukeren kan trekke tilbake tilgang n\\xE5r hen vil, og derfor m\\xE5 l\\xF8sninger som bruker \\\"user media\\\" v\\xE6re ganske godt skrudd sammen for \\xE5 h\\xE5ndtere at tilgang skrus av.\"), mdx(\"p\", null, \"Men heldigvis, siden nettleseren tilbyr grensesnittet og funksjonalitet for \\xE5 justere tilganger, samt hvilke kilder du skal ha tilgang til, s\\xE5 er det ikke mye kode som skal til i dette scenarioet.\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Det å lytte på webkamera kan gjøres på noen få linjer\\\"\",\n    \"subtitle\": \"\\\"Det\",\n    \"å\": true,\n    \"lytte\": true,\n    \"på\": true,\n    \"webkamera\": true,\n    \"kan\": true,\n    \"gjøres\": true,\n    \"noen\": true,\n    \"få\": true,\n    \"linjer\\\"\": true\n  }), \"async function getMediaStream() {\\n  const mediaStream = await navigator.mediaDevices.getUserMedia(\\n    {\\n      video: true,\\n    },\\n  );\\n\\n  const video = document.querySelector('video');\\n  video.srcObject = mediaStream;\\n}\\n\\n// Du m\\xE5 ha et video-element i DOM:\\n// <video autoPlay />\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"2[29:63] subtitle=\\\"Kalle getUserMedia\\\"\",\n    \"2[29:63]\": true,\n    \"subtitle\": \"\\\"Kalle\",\n    \"getUserMedia\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"4 subtitle=\\\"Send inn at du vil ha video\\\"\",\n    \"subtitle\": \"\\\"Send\",\n    \"inn\": true,\n    \"at\": true,\n    \"du\": true,\n    \"vil\": true,\n    \"ha\": true,\n    \"video\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"8,9 subtitle=\\\"Sette stream til video-elementet som finnes i DOM\\\"\",\n    \"8,9\": true,\n    \"subtitle\": \"\\\"Sette\",\n    \"stream\": true,\n    \"til\": true,\n    \"video-elementet\": true,\n    \"som\": true,\n    \"finnes\": true,\n    \"i\": true,\n    \"DOM\\\"\": true\n  }), \"\"))), mdx(\"hr\", null), mdx(\"p\", null, \"Voila!\"), mdx(VideoUserMedia, {\n    mdxType: \"VideoUserMedia\"\n  }), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Og koden du s\\xE5 tidligere var bokstavelig talt det som skulle til for \\xE5 vise video her\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Web Audio API\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AudioContext\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Streams, buffers\")), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"For \\xE5 gj\\xF8re noe med lyd fra mikronen, kan vi ta i bruk Web Audio API-et\", mdx(\"p\", null, \"Her kommer vi ogs\\xE5 innom streams og buffers\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"I stedet for å be om video,\\\"\",\n    \"subtitle\": \"\\\"I\",\n    \"stedet\": true,\n    \"for\": true,\n    \"å\": true,\n    \"be\": true,\n    \"om\": true,\n    \"video,\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  video: true,\\n});\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Så kan du be om audio\\\"\",\n    \"subtitle\": \"\\\"Så\",\n    \"kan\": true,\n    \"du\": true,\n    \"be\": true,\n    \"om\": true,\n    \"audio\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"AudioContext er fundamentet i Web Audio\\\"\",\n    \"subtitle\": \"\\\"AudioContext\",\n    \"er\": true,\n    \"fundamentet\": true,\n    \"i\": true,\n    \"Web\": true,\n    \"Audio\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Vi kan bruke mikrofonen som lydkilde\\\"\",\n    \"subtitle\": \"\\\"Vi\",\n    \"kan\": true,\n    \"bruke\": true,\n    \"mikrofonen\": true,\n    \"som\": true,\n    \"lydkilde\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\nconst source = audioContext.createMediaStreamSource(stream);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Prosessering av lyd går igjennom AudioNodes\\\"\",\n    \"subtitle\": \"\\\"Prosessering\",\n    \"av\": true,\n    \"lyd\": true,\n    \"går\": true,\n    \"igjennom\": true,\n    \"AudioNodes\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\nconst source = audioContext.createMediaStreamSource(stream);\\nconst volumeNode = audioContext.createGain();\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Så kan du gjøre operasjoner på lyden\\\"\",\n    \"subtitle\": \"\\\"Så\",\n    \"kan\": true,\n    \"du\": true,\n    \"gjøre\": true,\n    \"operasjoner\": true,\n    \"på\": true,\n    \"lyden\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\nconst source = audioContext.createMediaStreamSource(stream);\\nconst volumeNode = audioContext.createGain();\\nvolumeNode.gain.setValueAtTime(2, audioContext.currentTime);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Og du kan analysere lyden\\\"\",\n    \"subtitle\": \"\\\"Og\",\n    \"du\": true,\n    \"kan\": true,\n    \"analysere\": true,\n    \"lyden\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\nconst source = audioContext.createMediaStreamSource(stream);\\nconst volumeNode = audioContext.createGain();\\nvolumeNode.gain.setValueAtTime(2, audioContext.currentTime);\\nconst analyser = audioContext.createAnalyser();\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Og nodene linkes sammen i AudioContext og rutes ut\\\"\",\n    \"subtitle\": \"\\\"Og\",\n    \"nodene\": true,\n    \"linkes\": true,\n    \"sammen\": true,\n    \"i\": true,\n    \"AudioContext\": true,\n    \"og\": true,\n    \"rutes\": true,\n    \"ut\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\nconst source = audioContext.createMediaStreamSource(stream);\\nconst volumeNode = audioContext.createGain();\\nvolumeNode.gain.setValueAtTime(2, audioContext.currentTime);\\nconst analyser = audioContext.createAnalyser();\\nsource\\n  .connect(volumeNode)\\n  .connect(analyser)\\n  .connect(audioContext.destination);\\n\"))), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"AudioContext er boksen som inneholder alt av det som skjer av audio-h\\xE5ndtering i Web Audio. Den gj\\xF8r operasjoner p\\xE5 lyd via det som kalles audio nodes, som kan linkes sammen p\\xE5 en modul\\xE6r m\\xE5te for \\xE5 rute lyden og gj\\xF8re operasjoner p\\xE5 den.\"), mdx(\"hr\", null), mdx(AudioUserMedia, {\n    mdxType: \"AudioUserMedia\"\n  }), mdx(\"hr\", null), mdx(Image, {\n    src: imgs.audioContext,\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h2\", null, \"AudioWorklet\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"En worklet, nesten som en Web Worker\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gir tilgang til lavere niv\\xE5 i render pipeline\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Brukes n\\xE5r det er behov for mye prosessering\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Krever \\\"Secure Context\\\"\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Hvis vi har tilgang til mikrofon\\\"\",\n    \"subtitle\": \"\\\"Hvis\",\n    \"vi\": true,\n    \"har\": true,\n    \"tilgang\": true,\n    \"til\": true,\n    \"mikrofon\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\nconst source = audioContext.createMediaStreamSource(stream);\\n\\nsource.connect(audioContext.destination);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Så kan vi laste inn en audio-worklet\\\"\",\n    \"subtitle\": \"\\\"Så\",\n    \"kan\": true,\n    \"vi\": true,\n    \"laste\": true,\n    \"inn\": true,\n    \"en\": true,\n    \"audio-worklet\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\nconst source = audioContext.createMediaStreamSource(stream);\\n\\nawait audioContext.audioWorklet.addModule(\\n  './my-worklet.js',\\n);\\n\\nsource.connect(audioContext.destination);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Så må vi instantiere denne som en egen node\\\"\",\n    \"subtitle\": \"\\\"Så\",\n    \"må\": true,\n    \"vi\": true,\n    \"instantiere\": true,\n    \"denne\": true,\n    \"som\": true,\n    \"en\": true,\n    \"egen\": true,\n    \"node\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\nconst source = audioContext.createMediaStreamSource(stream);\\n\\nawait audioContext.audioWorklet.addModule(\\n  './my-worklet.js',\\n);\\nconst workletNode = new AudioWorkletNode(\\n  audioContext,\\n  'myworklet',\\n);\\n\\nsource.connect(audioContext.destination);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"subtitle=\\\"Og deretter connecte denne på samme måte i pipeline\\\"\",\n    \"subtitle\": \"\\\"Og\",\n    \"deretter\": true,\n    \"connecte\": true,\n    \"denne\": true,\n    \"på\": true,\n    \"samme\": true,\n    \"måte\": true,\n    \"i\": true,\n    \"pipeline\\\"\": true\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\nconst source = audioContext.createMediaStreamSource(stream);\\n\\nawait audioContext.audioWorklet.addModule(\\n  './my-worklet.js',\\n);\\nconst workletNode = new AudioWorkletNode(\\n  audioContext,\\n  'myworklet',\\n);\\n\\nsource\\n  .connect(workletNode)\\n  .connect(audioContext.destination);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"const stream = await navigator.mediaDevices.getUserMedia({\\n  audio: true,\\n});\\nconst audioContext = new AudioContext();\\nconst source = audioContext.createMediaStreamSource(stream);\\n\\nawait audioContext.audioWorklet.addModule(\\n  './my-worklet.js',\\n);\\nconst workletNode = new AudioWorkletNode(\\n  audioContext,\\n  'myworklet',\\n);\\n\\nsource\\n  .connect(workletNode)\\n  .connect(audioContext.destination);\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","id":"c53c4e25-09fe-5dc7-9799-7a727f2fa24e","slug":"","title":"Shriek"}},"staticQueryHashes":[]}